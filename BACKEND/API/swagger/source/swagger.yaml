---
openapi: 3.0.0
info:
  description: Rafał Figlus
  version: 1.0.0
  title: YourTour REST API
  contact:
    email: figlusrafal@gmail.com
paths:
  # Authentication endpoints
  "/api/authentication/register":
    post:
      tags:
        - Authentication
      summary: Register new account
      description: This endpoint requires reCAPTCHA token for human verification. For testing purposes validation can be turned off in REST API config file.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                f_name:
                  type: string
                  example: Joe
                l_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: joedoe@gmail.com
                phone_number:
                  type: string
                  example: 666999666
                password:
                  type: string
                  example: cisco123
                password_repeat:
                  type: string
                  example: cisco123
                token:
                  type: string
                  example: recaptcha-token-string
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  payload:
                    type: object
        '422':
          description: Invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  payload:
                    type: object

  "/api/authentication/login":
    post:
      tags:
        - Authentication
      summary:  Provide credentials ang get JSON Web Tokens in response body
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: joedoe@gmail.com
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  is_guide:
                    type: integer
                  user_id:
                    type: integer
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "User with given email was not found"
                  payload:
                    type: object
        '401':
          description: Wrong password
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Wrong password"
                  payload:
                    type: object
  "/api/authentication/logout":
    post:
       tags:
        - Authentication
        #TODO: Continue

  # Tours endpoints
  "/api/tour/new_tour":
    post:
      security:
        - bearerAuth: []
      tags:
        - Tour
      summary: Creates new tour
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/NewTour"

      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Done"
        '422':
          description: Not enough data
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Could not process data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Server error, try again"









  "/api/tour/tours":
    get:
      tags:
        - Tour
      summary: Returns limited number of tour's data and information about total search results and number of pages


  "/api/tour/tour":
    get:
      tags:
        - Tour
      summary: Returns all informations about tour specified by its ID
      parameters:
        - in: query
          name: tour_id
          schema:
            type: integer
            example: 310
          required: true
          description: ID of tour which information will be returned
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TourDetails"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Pożądana oferta nie została znaleziona
  "/api/authentication/token/refresh":
    get:
      security:
        - bearerAuth: []
      tags:
        - Authentication
      summary: Returns fresh access token in case of successful refreshing
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '401':
          description: Bad refresh token or token not present
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string


  "/api/guide/tours/active":
    get:
      security:
        - bearerAuth: []
      tags:
        - Guide
      summary: Returns all active tours created and held by specific guide
      parameters:
        - in: query
          name: sort
          schema:
            type: string
            example: "most_recent"
      responses:
        '401':
          description: Not allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Reason for blocked access"
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 207
                    header:
                      type: string
                      example: Haeder of the tour
                    start_date:
                      type: string
                      example: "03/08/2021"
                    end_date:
                      type: string
                      example: "03/08/2021"
                    price:
                      type: integer
                      example: 909
                    creation_date:
                      type: string
                      example: 03/08/2021
                    person_limit:
                      type: string
                      example: 35
                    image_url:
                      type: string
                      example: 123/path/to/the/file.jpg






  "/api/guide/tours/closed":
    get:
      tags:
        - Guide

  "/api/tour/tags":
    get:
      tags:
        - Tour
        #TODO: Continue
  "/api/tour/places":
    get:
      tags:
        - Tour
      summary: Returns array of objects with cities/towns in Poland
      description: >
        All cities and town in Poland are stored in the database. While creating new tour guide can select proper cities for his tour. Array of objects is returned
        based on input sent in query. Number of returned items is limited.
      parameters:
        - in: query
          name: place
          schema:
            type: string
            example: "Tarnowskie Gó"
          required: true
          description: User input, may be incomplete
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    place:
                      type: string

  "/api/tour/tour_places":
    get:
      tags:
        - Tour
        #TODO: Continue
  "/api/tour/tour_tags":
    get:
      tags:
        - Tour
        #TODO: Continue






components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    NewTour:
      type: object
      properties:
        tour_data:
          type: object
          properties:
            guide_id:
              type: integer
            header:
              type: string
            description:
              type: string
            person_limit:
              type: integer
            price:
              type: integer
            start_date:
              type: string
            end_date:
              type: string
            tour_plan:
              type: array
              items:
                type: string
            tour_places:
              type: array
              items:
                type: integer
        electives:
          type: object
          properties:
            imageGallery:
              type: boolean
            importantInfo:
              type: boolean
            priceList:
              type: boolean
        price_list:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
              variant:
                type: boolean
        important_info:
          type: array
          items:
            type: string
        main_image:
          type: string
          format: binary
        images:
          type: array
          items:
            type: string
            format: binary
      required:
        - tour_data
        - electives
        - main_image
    TourDetails:
      type: object
      required: ["general_data", "guide_data", "tour_plan"]
      properties:
        general_data:
          type: object
          properties:
            header:
              type: string
              example: "Header of the tour"
            description:
              type: string
              example: "Description of the tour. Very well described."
            start_date:
              type: string
              example: "2021/07/01"
            end_date:
              type: string
              example: "2021/08/30"
            price:
              type: integer
              example: 150
            person_limit:
              type: integer
              example: 25
            guide_id:
              type: integer
              example: 1
        guide_data:
          type: object
          properties:
            f_name:
              type: string
              example: "Joe"
            l_name:
              type: string
              example: "Black"
            id:
              type: integer
              example: 1
            email:
              type: string
              example: "joeblackk@gmail.com"
            phone_number:
              type: integer
              example: 956567393
        tour_plan:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: "Description of the tour plan point"
              number:
                type: integer
                example: 1
                summary: Defines the order of the plan points
        price_list:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: "This is included in the tour price"
              is_included:
                type: boolean
                example: true
        important_info:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: "This is very imporant informaion"
        gallery_images:
          type: array
          items:
            type: string
            example: "path-to-image"